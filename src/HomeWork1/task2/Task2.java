package HomeWork1.task2;

public class Task2 {
    public static void main(String[] args) {
        int two = 2;
        int eight = 8;

        int expression1 = 5 + 2 / 8; //Сначала выполняется целочисленное деление 2 / 8, даст 0, результат 5
        int expression2 = (5 + 2) / 8;// Сначала выполняется выражение в скобках = 7, целочисленное деление 7/8 = 0
        int expression3 = (5 + two++) / 8;//Постинкремент не влияет на результат выражения в скобках, получаем результат 0
        two = 2;
        int expression4 = (5 + two++) / --eight;//Постинкремент не влияет на результат выражения в скобках,
        two = 2;
        eight = 8;
        //Преинкремент уменьшает значение переменной eight до её участия в делении, 7/7 = 1
        int expression5 = (5 * 2 >> two++) / --eight;// Сначала выполняется выражение в скобках, в них сначала выполняется умножение,
        //потом сдвиг вправо, который равносилен целочисленному делению на 2 в степени равной = two, в скобках получим 2, 2/7 = 0
        two = 2;
        eight = 8;
        int expression6 = (5 + 7 > 20 ? 68 : 22 * 2 >> two++) / --eight;//Сначала выполняется выражение в скобках,в них сначала выполняется умножение,
        // потом сложение, потом сдвиг вправо, получаем (12>20?68:11)/--eight, т.к. 12>20 равно false тернарный оператор даёт 11. Выполняем преинкремент и
        // целочисленное деление 11/7 = 1
        two = 2;
        eight = 8;
        //int expression7 = (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> two++) / --eight; Ошибка компиляции, т.к. в тернарном операторе, один из
        //операндов принимает значение типа boolean(68 >= 68), а другой типа int(22 * 2 >> two++)
        boolean expression8 = 6 - 2 > 3 && 12 * 12 <= 119;//Сначала выполняется левый операнд выражения &&, т.к 4>3 = true,
        //проверяем правый операнд 144<=119 = false. Значит всё выражение = false
        boolean expression9 = true && false; //Правый операнд выражения && является false, значит всё выражение принимает значение false
    }
}
